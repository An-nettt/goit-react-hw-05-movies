{"version":3,"file":"static/js/452.1615f6fa.chunk.js","mappings":"oOAiBA,EAfkB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACnB,OACE,8BACGA,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,0BAAI,WAASD,MACb,yBAAG,IAAEC,EAAQ,SAFNF,EAKZ,KAGN,ECgCD,EAzCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACQJ,GAAOK,EAAAA,EAAAA,MAAPL,GA4BR,OA1BAM,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAWP,GACRQ,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,IACAL,MAAK,SAAAM,GACJ,OAAOA,EAAUC,QAAQhB,KAAI,kBAA8B,CACzDC,GAD2B,EAAGA,GAE9BC,OAF2B,EAAOA,OAGlCC,QAH2B,EAAeA,QAAf,GAK9B,IACAM,MAAK,SAAAM,GACJV,EAAWU,EACZ,IACAE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GAGN,GAAE,CAACjB,KAGF,wBACsB,IAAnBF,EAAQsB,QACP,uBAAG,8CAEH,SAAC,EAAD,CAAWtB,QAASA,KAI3B,C,uJC7CD,IAAMuB,EAAU,mCAEVC,EAAW,gCAEXC,EAAgB,SAKTC,EAAoB,WAC/B,OAAOC,MAAM,GAAD,OAAIH,GAAJ,OAPA,qBAOA,oBAAgCD,GAC7C,EAEYK,EAAkB,SAAA1B,GAC7B,OAAOyB,MAAM,GAAD,OAAIH,GAAJ,OAAeC,GAAf,OAA+BvB,EAA/B,oBAA6CqB,GAC1D,EAEYM,EAAU,SAAA3B,GACrB,OAAOyB,MAAM,GAAD,OAAIH,GAAJ,OAAeC,GAAf,OAA+BvB,GAA/B,OAbD,WAaC,oBAAoDqB,GACjE,EAEYd,EAAa,SAAAP,GACxB,OAAOyB,MAAM,GAAD,OAAIH,GAAJ,OAAeC,GAAf,OAA+BvB,GAA/B,OAhBE,WAgBF,oBAAuDqB,GACpE,EAEYO,EAAiB,SAAAC,GAC5B,OAAOJ,MAAM,GAAD,OAAIH,GAAJ,OAnBC,uBAmBD,OAAwBO,EAAxB,oBAAyCR,GACtD,C","sources":["components/ReviewsEl/ReviewsEl.jsx","components/Reviews/Reviews.jsx","services/getMovies.js"],"sourcesContent":["// import { Container } from './HomeStyled';\n\nconst ReviewsEl = ({ reviews }) => {\n  return (\n    <>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>'{content}'</p>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\nexport default ReviewsEl;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviews } from '../../services/getMovies';\nimport ReviewsEl from '../ReviewsEl/ReviewsEl';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = () => {\n      getReviews(id)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(response.status);\n          }\n          return response.json();\n        })\n        .then(reviewsEl => {\n          return reviewsEl.results.map(({ id, author, content }) => ({\n            id,\n            author,\n            content,\n          }));\n        })\n        .then(reviewsEl => {\n          setReviews(reviewsEl);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    };\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <p>We don`t have any reviews for this movie</p>\n      ) : (\n        <ReviewsEl reviews={reviews} />\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = '4b1c3558eb2d79dd671ee6aeceadbb9c';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TREND = 'trending/movie/day';\nconst MOVIE_DETAILS = 'movie/';\nconst CAST = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = 'search/movie?query=';\n\nexport const getTrendingMovies = () => {\n  return fetch(`${BASE_URL}${TREND}?api_key=${API_KEY}`);\n};\n\nexport const getMovieDetails = id => {\n  return fetch(`${BASE_URL}${MOVIE_DETAILS}${id}?api_key=${API_KEY}`);\n};\n\nexport const getCast = id => {\n  return fetch(`${BASE_URL}${MOVIE_DETAILS}${id}${CAST}?api_key=${API_KEY}`);\n};\n\nexport const getReviews = id => {\n  return fetch(`${BASE_URL}${MOVIE_DETAILS}${id}${REVIEWS}?api_key=${API_KEY}`);\n};\n\nexport const getSearchMovie = query => {\n  return fetch(`${BASE_URL}${SEARCH}${query}&api_key=${API_KEY}`);\n};\n"],"names":["reviews","map","id","author","content","useState","setReviews","useParams","useEffect","getReviews","then","response","ok","Error","status","json","reviewsEl","results","catch","error","console","log","length","API_KEY","BASE_URL","MOVIE_DETAILS","getTrendingMovies","fetch","getMovieDetails","getCast","getSearchMovie","query"],"sourceRoot":""}