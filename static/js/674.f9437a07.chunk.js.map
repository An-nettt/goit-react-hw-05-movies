{"version":3,"file":"static/js/674.f9437a07.chunk.js","mappings":"mNAGaA,EAAYC,EAAAA,GAAAA,GAAH,kEAKTC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uEAKVG,EAAaH,EAAAA,GAAAA,EAAH,mE,SCOvB,EAhBmB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,SAACR,EAAD,CAAqBS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAAzD,UACE,SAACF,EAAD,UAAaM,KADED,EAIpB,KAGN,C,oGChBYK,E,OAAQb,GAAAA,GAAH,iE,oCC2ClB,EApCa,WACX,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WAEND,GAAa,IACbE,EAAAA,EAAAA,MACGC,MAAK,SAAAhB,GACJ,OAAOA,EAAOiB,QAAQd,KAAI,kBAAoB,CAC5CC,GADwB,EAAGA,GAE3BC,MAFwB,EAAOA,MAAP,GAI3B,IACAW,MAAK,SAAAhB,GACJW,EAAUX,EACX,IACAkB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPT,GAAa,EACd,GAGN,GAAE,KAGD,2BACGD,IAAa,SAACW,EAAA,EAAD,KACd,SAACd,EAAD,UAAO,qBACP,SAACe,EAAA,EAAD,CAAYxB,OAAQA,MAGzB,C,uJC3CD,IAAMyB,EAAU,mCAEVC,EAAW,gCAEXC,EAAgB,SAKTZ,EAAoB,WAC/B,OAAOa,MAAM,GAAD,OAAIF,GAAJ,OAPA,qBAOA,oBAAgCD,IAAWT,MAAK,SAAAa,GAC1D,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYC,EAAkB,SAAA9B,GAC7B,OAAOwB,MAAM,GAAD,OAAIF,GAAJ,OAAeC,GAAf,OAA+BvB,EAA/B,oBAA6CqB,IAAWT,MAClE,SAAAa,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,EAEYE,EAAU,SAAA/B,GACrB,OAAOwB,MAAM,GAAD,OACPF,GADO,OACIC,GADJ,OACoBvB,GADpB,OAzBD,WAyBC,oBACyCqB,IACnDT,MAAK,SAAAa,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYG,EAAa,SAAAhC,GACxB,OAAOwB,MAAM,GAAD,OACPF,GADO,OACIC,GADJ,OACoBvB,GADpB,OAnCE,WAmCF,oBAC4CqB,IACtDT,MAAK,SAAAa,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYI,EAAiB,SAAAC,GAC5B,OAAOV,MAAM,GAAD,OAAIF,GAAJ,OA7CC,uBA6CD,OAAwBY,EAAxB,oBAAyCb,IAAWT,MAC9D,SAAAa,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,C","sources":["components/MoviesList/MoviesListStyled.js","components/MoviesList/MoviesList.jsx","pages/Home/HomeStyled.js","pages/Home/Home.js","services/getMovies.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  margin-top: 20px;\n  padding-left: 10;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-weight: 500;\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  margin-bottom: 10px;\n  color: #04284e;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyledLink, MovieList, MovieTitle } from './MoviesListStyled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {movies.map(({ id, title }) => {\n        return (\n          <StyledLink key={id} to={`/movies/${id}`} state={{ from: location }}>\n            <MovieTitle>{title}</MovieTitle>\n          </StyledLink>\n        );\n      })}\n    </MovieList>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.string),\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-left: 20px;\n  color: #04284e;\n`;\n","import { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Title } from './HomeStyled';\n\nimport { getTrendingMovies } from 'services/getMovies';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrending = () => {\n      setIsLoading(true);\n      getTrendingMovies()\n        .then(movies => {\n          return movies.results.map(({ id, title }) => ({\n            id,\n            title,\n          }));\n        })\n        .then(movies => {\n          setMovies(movies);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    };\n    fetchTrending();\n  }, []);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <Title> Trending today</Title>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.string),\n};\n","const API_KEY = '4b1c3558eb2d79dd671ee6aeceadbb9c';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TREND = 'trending/movie/day';\nconst MOVIE_DETAILS = 'movie/';\nconst CAST = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = 'search/movie?query=';\n\nexport const getTrendingMovies = () => {\n  return fetch(`${BASE_URL}${TREND}?api_key=${API_KEY}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getMovieDetails = id => {\n  return fetch(`${BASE_URL}${MOVIE_DETAILS}${id}?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n\nexport const getCast = id => {\n  return fetch(\n    `${BASE_URL}${MOVIE_DETAILS}${id}${CAST}?api_key=${API_KEY}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getReviews = id => {\n  return fetch(\n    `${BASE_URL}${MOVIE_DETAILS}${id}${REVIEWS}?api_key=${API_KEY}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getSearchMovie = query => {\n  return fetch(`${BASE_URL}${SEARCH}${query}&api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n"],"names":["MovieList","styled","StyledLink","Link","MovieTitle","movies","location","useLocation","map","id","title","to","state","from","Title","useState","setMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","then","results","catch","error","console","log","finally","Loader","MoviesList","API_KEY","BASE_URL","MOVIE_DETAILS","fetch","response","ok","Error","status","json","getMovieDetails","getCast","getReviews","getSearchMovie","query"],"sourceRoot":""}