{"version":3,"file":"static/js/714.acfffd04.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetailsStyled.js","components/MovieEl/MovieElStyled.js","components/MovieEl/MovieEl.jsx","components/MovieDetails/MovieDetails.jsx","services/getMovies.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackLink = styled(Link)`\n  display: flex;\n  width: 60px;\n  margin-top: 20px;\n  margin-left: 20px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  /* background: #eaeaea; */\n  background-color: #04284e;\n  color: #fff;\n  padding: 5px 10px;\n  text-decoration: none;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin-left: 60px;\n  margin-top: 20px;\n  margin-bottom: 30px;\n  gap: 10px;\n`;\n\nexport const AdditionalInfoTitle = styled.h4`\n  margin-left: 20px;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  gap: 10px;\n`;\n\nexport const LinkList = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-start;\n  gap: 10px;\n`;\n\nexport const MovieItem = styled.li`\n  list-style: none;\n`;\n\nexport const StyledLink = styled(Link)`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: #04284e;\n  color: #fff;\n  padding: 5px 10px;\n  text-decoration: none;\n`;\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 16px;\n`;\n\nexport const Poster = styled.img`\n  margin-top: 20px;\n  margin-left: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h1`\n  font-size: 2em;\n  margin-block-end: 0.67em;\n  margin-block-start: 0.67em;\n`;\n\nexport const Scores = styled.p`\n  display: flex;\n  gap: 16px;\n  margin-top: 10px;\n  margin-bottom: 35px;\n`;\n\nexport const ScoresNumber = styled.span`\n  font-weight: 600;\n`;\n\nexport const GenresEl = styled.div`\n  margin-top: 5px;\n  margin-bottom: 35px;\n  display: flex;\n  gap: 5px;\n`;\n\nexport const Genre = styled.p`\n  border: 1px solid #04284e;\n  border-radius: 4px;\n  /* background-color: #04284e; */\n  color: #04284e;\n  padding: 5px 12px;\n`;\n\nexport const Overview = styled.p`\n  margin-top: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Card,\n  Poster,\n  Details,\n  Title,\n  Scores,\n  ScoresNumber,\n  GenresEl,\n  Genre,\n  Overview,\n} from './MovieElStyled';\n\nconst MovieEl = ({ movie }) => {\n  const {\n    id,\n    title,\n    overview,\n    vote_average,\n    release_date,\n    poster_path,\n    genres,\n  } = movie;\n\n  const score = Math.round(vote_average * 10);\n\n  const year = new Date(Date.parse(release_date)).getFullYear();\n\n  return (\n    <Card key={id}>\n      <Poster\n        src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n        alt={title}\n      />\n\n      <Details>\n        <Title>\n          {title} ({year})\n        </Title>\n        <Scores>\n          User Score:<ScoresNumber>{score}%</ScoresNumber>\n        </Scores>\n        <h3>Genres</h3>\n        <GenresEl>\n          {genres && genres.map(({ name }) => <Genre key={name}>{name}</Genre>)}\n        </GenresEl>\n        <h3>Overview</h3>\n        <Overview>{overview}</Overview>\n      </Details>\n    </Card>\n  );\n};\n\nexport default MovieEl;\n\nMovieEl.propTypes = {\n  movie: PropTypes.arrayOf(PropTypes.string),\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  vote_average: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string),\n};\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport Loader from '../Loader/Loader';\n\nimport PropTypes from 'prop-types';\nimport {\n  GoBackLink,\n  AdditionalInfo,\n  AdditionalInfoTitle,\n  LinkList,\n  MovieItem,\n  StyledLink,\n} from './MovieDetailsStyled';\n\nimport { getMovieDetails } from '../../services/getMovies';\nimport MovieEl from '../MovieEl/MovieEl';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const goBackLocationRef = useRef(location.state?.from ?? '/');\n\n  const [movie, setMovie] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchDetails = () => {\n      getMovieDetails(id)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(response.status);\n          }\n          return response.json();\n        })\n        .then(movieEl => {\n          const {\n            id,\n            title,\n            overview,\n            genres,\n            vote_average,\n            release_date,\n            poster_path,\n          } = movieEl;\n          setMovie({\n            id,\n            title,\n            overview,\n            genres,\n            vote_average,\n            release_date,\n            poster_path,\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    };\n    fetchDetails();\n  }, [id]);\n\n  return (\n    <>\n      <GoBackLink to={goBackLocationRef.current}>Go back</GoBackLink>\n      <MovieEl movie={movie} />\n      <AdditionalInfo>\n        <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n        <LinkList>\n          <MovieItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </MovieItem>\n          <MovieItem>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </MovieItem>\n        </LinkList>\n      </AdditionalInfo>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movie: PropTypes.arrayOf(PropTypes.string),\n  id: PropTypes.number.isRequired,\n};\n","const API_KEY = '4b1c3558eb2d79dd671ee6aeceadbb9c';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TREND = 'trending/movie/day';\nconst MOVIE_DETAILS = 'movie/';\nconst CAST = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = 'search/movie?query=';\n\nexport const getTrendingMovies = () => {\n  return fetch(`${BASE_URL}${TREND}?api_key=${API_KEY}`);\n};\n\nexport const getMovieDetails = id => {\n  return fetch(`${BASE_URL}${MOVIE_DETAILS}${id}?api_key=${API_KEY}`);\n};\n\nexport const getCast = id => {\n  return fetch(`${BASE_URL}${MOVIE_DETAILS}${id}${CAST}?api_key=${API_KEY}`);\n};\n\nexport const getReviews = id => {\n  return fetch(`${BASE_URL}${MOVIE_DETAILS}${id}${REVIEWS}?api_key=${API_KEY}`);\n};\n\nexport const getSearchMovie = query => {\n  return fetch(`${BASE_URL}${SEARCH}${query}&api_key=${API_KEY}`);\n};\n"],"names":["GoBackLink","styled","Link","AdditionalInfo","AdditionalInfoTitle","LinkList","MovieItem","StyledLink","Card","Poster","Details","Title","Scores","ScoresNumber","GenresEl","Genre","Overview","movie","id","title","overview","vote_average","release_date","poster_path","genres","score","Math","round","year","Date","parse","getFullYear","src","alt","map","name","location","useLocation","goBackLocationRef","useRef","state","from","useState","setMovie","useParams","useEffect","getMovieDetails","then","response","ok","Error","status","json","movieEl","catch","error","console","log","to","current","Suspense","fallback","Loader","API_KEY","BASE_URL","MOVIE_DETAILS","getTrendingMovies","fetch","getCast","getReviews","getSearchMovie","query"],"sourceRoot":""}